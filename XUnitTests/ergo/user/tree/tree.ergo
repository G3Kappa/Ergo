:- module(tree, [
	tree/4,
	list_tree/2
]).

:- use_module(option).

tree(nil, _, _, _).
tree(Node, V, L, R) :-
  named_tuple(Node, node, (Value,Left,Right)),
  named_arg(Value, value, V),
  named_arg(Left, left, L),
  named_arg(Right, right, R),
  tree(L, _, _, _), tree(R, _, _, _).

list_tree(void, []).
list_tree(Node, List) :-
	Node \= void,
	tree(Node, V, L, R),
	list_tree(L, Head),
	append(Head, [V], HeadV),
	list_tree(R, Tail),
	append(HeadV, Tail, List).