:- module(list, [
	member/2, length/2, append/3
]).

:- op(15, xfy, ['|']).

member(_, []) :- false.
member(X, [Y|T]) :- (X = Y; member(X, T)).

length([], 0).
length([_|[]], 1) :- !.
length([_|T], L) :- length(T, M), L := M + 1 .

append([], L, L).
append([H|T], L, [H|R]) :- append(T, L, R).