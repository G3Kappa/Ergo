:- module(math, [
	range/2, range/1,
	plus/3
]).

:- lit('π', 3.14159265359).
:- lit('τ', 6.28318530717).

% HELPERS

between_(Min, Max, _, M) :- Min <= Max, M is Min.
between_(Min, Max, Step, M) :-
	Min <= Max,
	between_(@eval(Min + Step), Max, Step, M).

between('[', Min, Max, ']', Step, M) :- between_(Min, Max, Step, M).
between('(', Min, Max, ']', Step, M) :- between_(@eval(Min + Step), Max, Step, M).
between('[', Min, Max, ')', Step, M) :- between_(Min, @eval(Max - Step), Step, M).
between('(', Min, Max, ')', Step, M) :- between_(@eval(Min + Step), @eval(Max - Step), Step, M).

% EXPORTED

range(Min < X < Max, step:Step) :- between('(', Min, Max, ')', Step, X).
range(Min <= X < Max, step:Step) :- between('[', Min, Max, ')', Step, X).
range(Min < X <= Max, step:Step) :- between('(', Min, Max, ']', Step, X).
range(Min <= X <= Max, step:Step) :- between('[', Min, Max, ']', Step, X).
range(R) :- range(R, step:1).

plus(A, B, C) :- @ground(A), @ground(B), \+@ground(C), C := A + B.
plus(A, B, C) :- @ground(A), \+@ground(B), @ground(C), B := C - A.
plus(A, B, C) :- \+@ground(A), @ground(B), @ground(C), A := C - B. 