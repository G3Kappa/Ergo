:- module(wikidata, [
	'*:'/2, thing/2
]).

:- op(101, xfy, ['*:']).

thing(RawValue, Value) :- entity(RawValue, Value), !.
thing(RawValue, Value) :- property(RawValue, Value), !.
thing(RawValue, RawValue).

'*:'(Thing, Property-Value-Qualifier-QualifierValue) :- 
	thing(Thing, Entity),
	entity(EntityId, Entity),
	entity_claim(Entity, Claim),
	claim_property_value(Claim, PropertyId, RawValue),
	property(PropertyId, Property),
	thing(RawValue, Value),
	(
		( claim_qualifier(Claim, QualifierSnak),
		claim_property_value(QualifierSnak, QPropertyId, QRawValue),
		property(QPropertyId, Qualifier),
		thing(QRawValue, Value) )
		; Qualifier = 'N/A', QualifierValue = 'N/A'
	).
